<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    x:Class="AuctionSystem.UsingBlockChain.ResourceDictionaryCS.ToolDictionary"
                    x:ClassModifier="public">
    <!-- 로고 -->
    <Path x:Shared="false" x:Key="LogoPath" Data="F1M25.487,11.002C25.632,11.146 25.823,11.22 26.013,11.22 26.204,11.22 26.394,11.146 26.539,11.002L28.044,9.497 29.549,11.002C29.694,11.146 29.884,11.22 30.075,11.22 30.265,11.22 30.456,11.146 30.601,11.002 30.892,10.711 30.892,10.239 30.601,9.949L29.096,8.444 30.601,6.94C30.892,6.649 30.892,6.177 30.601,5.887 30.311,5.598 29.84,5.597 29.549,5.887L28.044,7.392 26.539,5.887C26.249,5.597 25.778,5.597 25.487,5.887 25.196,6.177 25.196,6.649 25.487,6.94L26.992,8.444 25.487,9.949C25.196,10.239,25.196,10.711,25.487,11.002z M28.044,16.889C32.7,16.889 36.488,13.1 36.488,8.444 36.488,3.788 32.7,0 28.044,0 23.388,0 19.6,3.788 19.6,8.444 19.6,13.1 23.388,16.889 28.044,16.889z M28.044,1.488C31.879,1.488 34.999,4.609 34.999,8.444 34.999,12.28 31.879,15.4 28.044,15.4 24.208,15.4 21.088,12.28 21.088,8.444 21.088,4.609 24.208,1.488 28.044,1.488z M11.441,27.3L5.447,27.3C5.036,27.3 4.703,27.633 4.703,28.044 4.703,28.455 5.036,28.789 5.447,28.789L11.441,28.789C11.852,28.789 12.185,28.455 12.185,28.044 12.185,27.633 11.852,27.3 11.441,27.3z M8.444,19.6C3.788,19.6 0,23.388 0,28.044 0,32.7 3.788,36.489 8.444,36.489 13.1,36.489 16.888,32.7 16.888,28.044 16.888,23.388 13.1,19.6 8.444,19.6z M8.444,35C4.608,35 1.488,31.88 1.488,28.044 1.488,24.209 4.608,21.089 8.444,21.089 12.279,21.089 15.4,24.209 15.4,28.044 15.4,31.88 12.279,35 8.444,35z M28.044,19.6C23.388,19.6 19.6,23.388 19.6,28.044 19.6,32.7 23.388,36.489 28.044,36.489 32.7,36.489 36.488,32.7 36.488,28.044 36.488,23.388 32.7,19.6 28.044,19.6z M28.044,35C24.208,35 21.088,31.88 21.088,28.044 21.088,24.209 24.208,21.089 28.044,21.089 31.879,21.089 34.999,24.209 34.999,28.044 34.999,31.88 31.879,35 28.044,35z M28.044,23.833C27.633,23.833,27.3,24.166,27.3,24.577L27.3,28.625C27.3,29.036 27.633,29.369 28.044,29.369 28.455,29.369 28.788,29.036 28.788,28.625L28.788,24.577C28.788,24.166,28.455,23.833,28.044,23.833z M28.044,30.419C27.633,30.419,27.3,30.753,27.3,31.163L27.3,31.511C27.3,31.922 27.633,32.256 28.044,32.256 28.455,32.256 28.788,31.922 28.788,31.511L28.788,31.163C28.788,30.753,28.455,30.419,28.044,30.419z" Fill="{StaticResource WhiteColor}" Height="22" Width="22" Margin="5,0,0,0" Stretch="Fill"/>
    <Path x:Shared="false" x:Key="Connect" Data="F1M8,0C3.582,0 0,3.582 0,8 0,12.419 3.582,16 8,16 12.419,16 16,12.419 16,8 16,3.582 12.419,0 8,0z M11.467,6.404L7.567,10.305C7.473,10.398 7.346,10.451 7.213,10.451 7.08,10.451 6.954,10.398 6.86,10.305L4.533,7.977C4.338,7.782 4.338,7.466 4.533,7.27 4.729,7.075 5.045,7.075 5.241,7.27L7.213,9.244 10.76,5.697C10.955,5.502 11.272,5.502 11.467,5.697 11.663,5.892 11.663,6.209 11.467,6.404z" Fill="{StaticResource BlueColor}" Width="16" Height="16" Stretch="Fill"/>
    <Path x:Shared="false" x:Key="DisConnect" Data="F1M8,0C3.581,0 0,3.582 0,8 0,12.419 3.581,16 8,16 12.418,16 16,12.419 16,8 16,3.582 12.418,0 8,0z M10.463,9.757C10.659,9.952 10.659,10.268 10.463,10.464 10.366,10.561 10.238,10.61 10.11,10.61 9.982,10.61 9.854,10.561 9.756,10.464L8,8.707 6.243,10.464C6.146,10.561 6.018,10.61 5.89,10.61 5.762,10.61 5.634,10.561 5.537,10.464 5.341,10.268 5.341,9.952 5.537,9.757L7.293,8 5.537,6.244C5.341,6.049 5.341,5.732 5.537,5.537 5.732,5.342 6.048,5.342 6.243,5.537L8,7.293 9.756,5.537C9.951,5.342 10.268,5.342 10.463,5.537 10.659,5.732 10.659,6.049 10.463,6.244L8.707,8z" Fill="{StaticResource RedColor}" Width="16" Height="16" Stretch="Fill"/>
    <Path x:Shared="false" x:Key="Crown" Data="F1M259.149,39.697C259.639,39.773 260.138,39.824 260.649,39.824 266.034,39.824 270.399,35.46 270.399,30.075 270.399,24.69 266.034,20.325 260.649,20.325 255.265,20.325 250.9,24.69 250.9,30.075 250.9,32.601 251.869,34.896 253.446,36.629 234.199,52.64 180.25,87.627 139.308,18.918 143.071,17.567 145.767,13.978 145.767,9.75 145.767,4.365 141.402,0 136.017,0 130.632,0 126.267,4.365 126.267,9.75 126.267,13.978 128.963,17.567 132.726,18.918 90.664,89.51 34.87,50.645 17.087,35.358 18.585,33.643 19.5,31.406 19.5,28.951 19.5,23.566 15.134,19.201 9.75,19.201 4.365,19.201 0,23.566 0,28.951 0,34.336 4.365,38.7 9.75,38.7 10.764,38.7 11.742,38.545 12.661,38.258L30.334,151.612 241.701,151.612z" Fill="{StaticResource GoldColor}" Width="50" Height="30" Stretch="Fill"/>
    <Path x:Shared="false" x:Key="CheckPath_Big" Data="F1M79.252,0C35.553,0 0,35.552 0,79.252 0,122.952 35.553,158.504 79.252,158.504 122.952,158.504 158.504,122.952 158.504,79.252 158.504,35.552 122.952,0 79.252,0z M79.252,150C40.242,150 8.504,118.262 8.504,79.252 8.504,40.241 40.242,8.504 79.252,8.504 118.263,8.504 150,40.241 150,79.252 150,118.262 118.263,150 79.252,150z M105.433,57.966L71.875,91.523 53.068,72.716C51.407,71.055 48.716,71.055 47.055,72.716 45.394,74.376 45.394,77.069 47.055,78.729L68.869,100.543C69.699,101.373 70.788,101.788 71.875,101.788 72.963,101.788 74.052,101.373 74.882,100.543L111.447,63.978C113.107,62.318 113.107,59.626 111.447,57.966 109.787,56.304 107.093,56.304 105.433,57.966z" Fill="{StaticResource OrangeColor}" Width="40" Height="40" Stretch="Fill"/>

    <!-- TextBlock -->
    <Style x:Key="TitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
        <Setter Property="Background" Value="{StaticResource TabColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
    </Style>
    <Style x:Key="BottomTitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
        <Setter Property="Background" Value="{StaticResource BlackColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
    </Style>
    <Style x:Key="NormalTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
    </Style>
    <Style x:Key="ButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
    </Style>
    
    <!-- TextBox -->
    <ControlTemplate x:Key="TextBoxCommonDisableStyle" TargetType="{x:Type TextBox}">
        <Border BorderThickness="1" Background="{StaticResource BlackColor}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="Thin" Foreground="{StaticResource GrayColor}" SnapsToDevicePixels="False"/>
        </Border>
    </ControlTemplate>
    <Style x:Key="TextBoxCommonStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"></Setter>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="1" Background="{StaticResource WhiteColor}" BorderBrush="{StaticResource OverBlackColor}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="Thin" Foreground="{StaticResource GrayColor}" SnapsToDevicePixels="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Template" Value="{StaticResource TextBoxCommonDisableStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="TextBoxBorder" StartPoint="0,0" MappingMode="Absolute" EndPoint="0,20">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="PasswordBoxDisableStyle" TargetType="{x:Type PasswordBox}">
        <Border BorderThickness="1" Background="{StaticResource WhiteColor}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="Thin" Foreground="{StaticResource GrayColor}" SnapsToDevicePixels="False"/>
        </Border>
    </ControlTemplate>
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border BorderThickness="1" Background="{StaticResource WhiteColor}" BorderBrush="{StaticResource OverBlackColor}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="Thin" Foreground="{StaticResource GrayColor}" SnapsToDevicePixels="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Template" Value="{StaticResource PasswordBoxDisableStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxNumberStyle" TargetType="{x:Type TextBox}">
        <Setter Property="MaxLength" Value="32"/>
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
        <EventSetter Event="PreviewTextInput" Handler="Number_ValidationTextBox"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="1" Background="{StaticResource WhiteColor}" BorderBrush="{StaticResource BoxBorderBrushColor}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="Thin" Foreground="{StaticResource BlackColor}" SnapsToDevicePixels="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Template" Value="{StaticResource TextBoxCommonDisableStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Board -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource WhiteColor}"/>
        <Setter Property="CornerRadius" Value="5,5,5,5"/>
    </Style>

    <!-- Combobox ToggleButton-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="{StaticResource WhiteColor}" BorderBrush="{StaticResource BoxBorderBrushColor}" BorderThickness="1"/>
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource BlackColor}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M2.63,4.391L0,0 5.26,0z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButtonDisable" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="#FFD1D3D4" BorderBrush="#FFA7A9AC" BorderThickness="1"/>
            <Path x:Name="Arrow" Grid.Column="1" Fill="#FFA7A9AC" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M2.63,4.391L0,0 5.26,0z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxSubToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="{StaticResource WhiteColor}" BorderBrush="{StaticResource BoxBorderBrushColor}" BorderThickness="1"/>
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M2.63,4.391L0,0 5.26,0z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxSubToggleButtonDisable" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="#FFD1D3D4" BorderBrush="#FFA7A9AC" BorderThickness="1"/>
            <Path x:Name="Arrow" Grid.Column="1" Fill="#FFA7A9AC" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M2.63,4.391L0,0 5.26,0z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBoxDisable" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="#FFD1D3D4" />
    </ControlTemplate>
    <Style x:Key="comboboxitemstyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{StaticResource BlackColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis">
                            <ContentPresenter Margin="10,3,10,3"/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBlackColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <Style x:Key="ComboBoxCommonStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource comboboxitemstyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="True"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,40,3" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,3,23,3" FontFamily="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"
                            Focusable="True" Background="{StaticResource WhiteColor}" Foreground="{StaticResource BlackColor}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" Width="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource WhiteColor}" BorderThickness="1" BorderBrush="{StaticResource BoxBorderBrushColor}"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ToggleButton" Property="Template" Value="{StaticResource ComboBoxToggleButtonDisable}"/>
                            <Setter TargetName="ToggleButton" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Template" Value="{StaticResource ComboBoxTextBoxDisable}"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <!--윈도우버튼-->
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}" />
        <Setter Property="Margin" Value="0,2,3,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LightBlackColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource BlueColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="18" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlueColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="18" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlueColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="18" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource BlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource RedColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="14" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource BlueColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource GrayColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource ButtonTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overgrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disable">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource WhiteColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource NormalTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="overgrid" Visibility="Hidden">
                            <Rectangle x:Name="overrectangle" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                            <TextBlock Style="{StaticResource NormalTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="grid" Visibility="Hidden">
                            <Rectangle x:Name="rectangle1" Fill="{StaticResource LightBlackColor}" RadiusX="5" RadiusY="5"/>
                            <TextBlock Style="{StaticResource NormalTextBlockStyle}" FontSize="12" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" TextOptions.TextHintingMode="Animated" TextAlignment="Center"/>
                        </Grid>
                        <Rectangle x:Name="disable" Fill="Black" RadiusX="5" RadiusY="5" Opacity="0.5" Visibility="Hidden">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}" />
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ListView -->
    <Style x:Key="ListViewHorizontalStyle" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    </Style>
    <Style x:Key="TextBlockListIndexStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style x:Key="GridViewCollapsedColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    <Style x:Key="GridViewItemHorizontalStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Background" Value="{StaticResource WhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}" >
                    <Grid SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Width" Value="1140"/>
        <Setter Property="BorderBrush" Value="{StaticResource WhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    <Style x:Key="GridViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="41"/>
        <Setter Property="Margin" Value="-3,0,-3,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}" />
        <Setter Property="Background" Value="{StaticResource WhiteColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WhiteColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain;component/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}" >
                    <Grid SnapsToDevicePixels="True">
                        <Border>
                            <Canvas>
                                <Line X1="0" Y1="0" X2="1140" Y2="0" Stroke="{StaticResource BoxBorderBrushColor}" StrokeThickness="1px"/>
                            </Canvas>
                        </Border>
                        <Grid Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <Border>
                            <Canvas>
                                <Line X1="0" Y1="40" X2="1140" Y2="40" Stroke="{StaticResource BoxBorderBrushColor}" StrokeThickness="1px"/>
                            </Canvas>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Height" Value="41"/>
        <Setter Property="Margin" Value="-3,0,-3,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource BlackColor}" />
        <Setter Property="Background" Value="{StaticResource WhiteColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WhiteColor}"/>
        <Setter Property="FontFamily" Value="/AuctionSystem.UsingBlockChain/Font/#Noto Sans CJK KR Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}" >
                    <Grid SnapsToDevicePixels="True">
                        <Border>
                            <Canvas>
                                <Line X1="0" Y1="0" X2="720" Y2="0" Stroke="{StaticResource BlackColor}" StrokeThickness="1px"/>
                            </Canvas>
                        </Border>
                        <TextBlock Style="{StaticResource NormalTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
                        <Border>
                            <Canvas>
                                <Line X1="0" Y1="40" X2="720" Y2="40" Stroke="{StaticResource BlackColor}" StrokeThickness="1px"/>
                            </Canvas>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource VerticalThumb}" Width="8"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="MinHeight" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.00001*"/>
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ScrollViewer-->
    <Style x:Key="ScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" Focusable="false" Visibility="Collapsed"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Height="18" IsTabStop="False" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                     Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                     Value="{TemplateBinding HorizontalOffset}" Style="{DynamicResource ScrollBarStyle1}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
